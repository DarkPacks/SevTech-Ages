# Configuration file

energyhatch {

    tiny {
        I:limit=128
        I:size=2048
        I:tier=1
    }

    small {
        I:limit=512
        I:size=4096
        I:tier=2
    }

    normal {
        I:limit=512
        I:size=8192
        I:tier=2
    }

    reinforced {
        I:limit=2048
        I:size=16384
        I:tier=3
    }

    big {
        I:limit=8192
        I:size=32768
        I:tier=4
    }

    huge {
        I:limit=32768
        I:size=131072
        I:tier=5
    }

    ludicrous {
        I:limit=131072
        I:size=524288
        I:tier=6
    }

    ultimate {
        I:limit=131072
        I:size=2097152
        I:tier=6
    }

    size {
        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 32768]
        S:BIG=32768

        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 131072]
        S:HUGE=131072

        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 524288]
        S:LUDICROUS=524288

        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 8192]
        S:NORMAL=8192

        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 16384]
        S:REINFORCED=16384

        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 4096]
        S:SMALL=4096

        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 2048]
        S:TINY=2048

        # Energy storage size of the energy hatch. [range: 0 ~ 9223372036854775807, default: 2097152]
        S:ULTIMATE=2097152
    }

    limit {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 32768]
        S:BIG=8192

        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 131072]
        S:HUGE=32768

        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 524288]
        S:LUDICROUS=131072

        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 8192]
        S:NORMAL=512

        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 16384]
        S:REINFORCED=2048

        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 4096]
        S:SMALL=512

        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 2048]
        S:TINY=128

        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 9223372036854775806, default: 2097152]
        S:ULTIMATE=131072
    }

    tier {
        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:BIG=4

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:HUGE=5

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:LUDICROUS=6

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:NORMAL=2

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:REINFORCED=3

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:SMALL=2

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:TINY=1

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12]
        I:ULTIMATE=6
    }

    gtvoltage {
        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:BIG=4

        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:HUGE=5

        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:LUDICROUS=6

        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:NORMAL=2

        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:REINFORCED=3

        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:SMALL=2

        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:TINY=1

        # Defines the GT voltage tier. Affects both input and output hatches of this tier. [range: 0 ~ 8]
        I:ULTIMATE=6
    }

    gtamperage {
        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:BIG=2

        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:HUGE=2

        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:LUDICROUS=2

        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:NORMAL=2

        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:REINFORCED=2

        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:SMALL=2

        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:TINY=2

        # Defines the GT amperage. Affects both output amperage as well as maximum input amperage. [range: 1 ~ 16]
        I:ULTIMATE=2
    }

}


fluidhatch {

    tiny {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 100]
        I:size=2000
    }

    small {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 400]
        I:size=4000
    }

    normal {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 1000]
        I:size=8000
    }

    reinforced {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 2000]
        I:size=16000
    }

    big {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 4500]
        I:size=32000
    }

    huge {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 8000]
        I:size=64000
    }

    ludicrous {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 16000]
        I:size=128000
    }

    vacuum {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 32000]
        I:size=256000
    }

}


general {
    # Defines the _default_ color for machine casings as items or blocks. (Hex color without alpha) Has to be defined both server and clientside! [default: FF4900]
    S:general-casing-color=FF4900
}


